/**
 ******************************************************************************
 * @file           : CortexM4_Core_NVIC.c
 * @author         : Mohamed Osama
 * @brief          : Contains The Static Code To Control NVIC
 ******************************************************************************/
#include "CortexM4_Core_NVIC.h"

/**
 * @brief Enables a specific interrupt in the NVIC.
 * @details This function enables the interrupt specified by the IRQn parameter in the NVIC
 * @param IRQn The interrupt number to be enabled.
 * @note Once enabled, the interrupt can trigger an interrupt service routine (ISR) when the corresponding event occurs.
 */
void NVIC_EnableIRQ(IRQn_Type IRQn){

}

/** @brief Disables a specific interrupt in the NVIC.
 *  @details This function disables the interrupt specified by the IRQn parameter in the NVIC
 *  @param IRQn The interrupt number to be disabled.
 *  @note Once disabled, the interrupt will not trigger any interrupt service routine (ISR) when the corresponding event occurs.
 */
void NVIC_DisableIRQ(IRQn_Type IRQn){

}

/** @brief Sets a specific interrupt as pending in the NVIC.
 *  @details This function sets the specified interrupt as pending in the NVIC
 *  @param IRQn The interrupt number to be set as pending.
 *  @note Setting an interrupt as pending means that the interrupt will be triggered as soon as the processor allows it.
 */
void NVIC_SetPendingIRQ(IRQn_Type IRQn){

}

/** @brief Clears the pending status of a specific interrupt in the NVIC.
 *  @details This function clears the pending status of the specified interrupt in the NVIC
 *  @param IRQn The interrupt number for which the pending status should be cleared.
 *  @note Clearing the pending status means that the interrupt will not be triggered until a new event occurs.
 */
void NVIC_ClearPendingIRQ(IRQn_Type IRQn){

}

/** @brief Retrieves the active status of a specific interrupt in the NVIC.
 *  @details This function retrieves the active status of the specified interrupt in the NVIC (Nested Vectored Interrupt Controller).
 *  @param IRQn The interrupt number for which the active status should be retrieved.
 *  @return The active status of the specified interrupt. It returns a 1 value if the interrupt is active, and zero otherwise.
 */
uint32_t NVIC_GetActiveIRQ(IRQn_Type IRQn){

	return 0;
}
